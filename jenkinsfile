pipeline {
    agent any
    environment {
        IMAGE_TAG = "${BUILD_NUMBER}"
        DOCKER_CREDENTIALS = "tuhin200"
	APP_NAME = "tuhin-cv"
        GIT_REPO = "https://github.com/tuhinmiazy73/tuhin.git"
        GITHUB_TOKEN_CREDENTIALS = "GITHUB-TOKEN"
	UPSTRING_CONF_PROJECT_NAME = "conf_pipeline"
    }
    stages {
        stage('CLEANUP WORKSPACE') {
            steps {
                script {
                    cleanWs()
                }
            }
        }
        stage('CHECKOUT GIT REPO') {
            steps {
                git branch: 'main', credentialsId: 'tuhinmiazy73', url: "${GIT_REPO}"
            }
        }
        stage('BUILD IMAGE AND PUSH TO DOCKER HUB') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIALS}", passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    sh """
                        docker build --no-cache -t ${DOCKER_USERNAME}/${APP-NAME}:${IMAGE_TAG} .
                        echo ${DOCKER_PASSWORD} | docker login --username ${DOCKER_USERNAME} --password-stdin
                        docker push ${DOCKER_USERNAME}/${APP-NAME} ${IMAGE_TAG}
                        docker logout
                    """
                }
            }
        }
	stage("TRIGGERING THE CONFIG PIPELINE"){
            steps{
                build job: env.UPSTRING_CONF_PROJECT_NAME, parameters: [string(name: 'IMAGE_TAG', value: env.IMAGE_TAG),string(name: 'APP_NAME', value: env.APP_NAME)]
            }
        }
    }
}
